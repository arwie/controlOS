#!/usr/bin/python3

import logging, os, base64
import tornado, tornado.web
from tornado.web import Application, StaticFileHandler
from tornado.httpserver import HTTPServer
from systemd import journal
from update import UpdateHandler
from remote import RemoteHandler
from wlan import WlanHandler
from backup import BackupHandler
from log import LogHandler, LogFieldHandler

import proxy
import jobdb

logging.root.addHandler(journal.JournalHandler())
logging.root.setLevel(logging.DEBUG)
logging.getLogger('tornado.access').setLevel(logging.WARNING)



class GuiHandler(tornado.web.RequestHandler):
	def get(self):
		self.render('gui.html')

class HmiHandler(tornado.web.RequestHandler):
	def get(self):
		self.render('gui.html', hmi=True)

class LocaleHandler(tornado.web.RequestHandler):
	def get(self, locale):
		self.render('locale/'+locale+'.ftl')



handlers = [
	(r"/",						GuiHandler),
	(r"/hmi",					HmiHandler),
	(r"/jobdb/jobs",			jobdb.JobsHandler),
	(r"/jobdb/grippers",		jobdb.GrippersHandler),
	(r"/jobdb/clampings",		jobdb.ClampingsHandler),
	(r"/jobdb/machines",		jobdb.MachinesHandler),
	(r"/jobdb/racks",			jobdb.RacksHandler),
	(r"/jobdb/tasks",			jobdb.TasksHandler),
	(r"/jobdb/teach",			proxy.HttpWebsocketJsonProxy,	{'url': 'ws://mc:5501'}),
	(r"/locale/(.*).ftl",		LocaleHandler),
	(r"/log",					LogHandler),
	(r"/log/(.*)",				LogFieldHandler),
	(r"/update",				UpdateHandler),
	(r"/remote",				RemoteHandler),
	(r"/wlan",					WlanHandler),
	(r"/backup",				BackupHandler),
	(r"/mc/debug",				proxy.WebsocketJsonProxy,		{'url': 'ws://mc:5610'}),
	(r"/mc/state",				proxy.WebsocketJsonProxy,		{'url': 'ws://mc:33000'}),
]

settings = {
	'static_path':		os.path.dirname(__file__)+'/static',
	'cookie_secret':	base64.b64encode(os.urandom(64)).decode('ascii'),
	'debug':			True,
}


application = Application(handlers, **settings)
http_server = HTTPServer(application, max_buffer_size=128*1024*1024)
http_server.listen(80)
tornado.ioloop.IOLoop.current().start()
