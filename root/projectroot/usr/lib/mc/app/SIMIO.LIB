' Copyright (c) 2016 Artur Wiebe <artur@4wiebe.de>
'
' Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
' associated documentation files (the "Software"), to deal in the Software without restriction,
' including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
' and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
' subject to the following conditions:
'
' The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
'
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
' INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
' IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
' WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
' OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


dim shared pollIntervalMs as const long		= 250

dim shared simioWebsocket as long
dim shared simioWebsocketConnected as long



<?lib_start()?>
<?	libComOpenServerWebsocket('simioWebsocket', 6002)?>
	simioWebsocketConnected = false
end sub


<?lib_stop()?>
	call com_close(simioWebsocket)
end sub



<? lib_prgLoop(16) ?>
	select case com_receive(simioWebsocket, pollIntervalMs)
	case com_receiveConnect
		simioWebsocketConnected = true
		call sendList
	case com_receiveMessage
		try
			call handleOverride
		catch else
			call logPrgError
			call logSend
		end try
	case com_receiveDisconnect
		simioWebsocketConnected = false
	end select

	if simioWebsocketConnected then
		try
			call updateInputs
		catch else
			call logPrgError
			call logSend
		end try
		call sendUpdate
	end if
end sub



sub handleOverride
	select case com_getLong("/id")
<?
	foreach($simio as $io) {
		ll('case '.$io['id']);
		lll('select case com_getLong("/ord")');
		
		lll('case 0');
		if (!$io['sim']) {
			if ($io['dir'] == 'out') {
				llll($io['io'].' = '.$io['app']);
				llll('call '.$io['set'].'('.$io['io'].')');
			}
			llll($io['ord'].' = false');
		}
		
		lll('case 1');
		llll($io['ord'].' = true');
		
		lll('case 2');
		if ($io['dir'] == 'in') {
			llll($io['app'].' = com_get'.ucfirst($io['type']).'("/io")');
			llll($io['ord'].' = true');
		} else if (!$io['sim']) {
			llll($io['ord'].' = true');
			llll($io['io'].'  = com_get'.ucfirst($io['type']).'("/io")');
			llll('call '.$io['set'].'('.$io['io'].')');
		}
		
		lll('end select');
	}
?>
	end select
end sub


sub updateInputs
<?
	foreach($simio as $io) {
		if (!$io['sim'] && $io['dir'] == 'in') {
			ll('call '.$io['get'].'('.$io['io'].')');
			ll('if not '.$io['ord'].' then');
			lll($io['app'].' = '.$io['io']);
			ll('end if');
		}
	}
?>
end sub


sub sendUpdate
	call com_clear
<?
	foreach($simio as $io) {
		ll('call com_with("/'.$io['id'].'")');
		lll('call com_putLong("id",  '.$io['id'].')');
		lll('call com_putLong("ord", '.$io['ord'].')');
		lll('call com_put'.ucfirst($io['type']).'("app", '.$io['app'].')');
		lll('call com_put'.ucfirst($io['type']).'("io",  '.$io['io'].')');
	}
?>
	call com_send(simioWebsocket)
end sub


sub sendList
	call com_clear
<?
	foreach($simio as $io) {
		ll('call com_with("/'.$io['id'].'")');
		lll('call com_putLong("id",  '.$io['id'].')');
		lll('call com_putLong("sim", '.$io['sim'].')');
		lll('call com_putString("dir",  "'.$io['dir'].'")');
		lll('call com_putString("name", "'.$io['name'].'")');
		lll('call com_putString("type", "'.$io['type'].'")');
	}
?>
	call com_send(simioWebsocket)
end sub
